version: '3'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shopai-backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/shoppingdb
    networks:
      - app-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shopai-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    env_file:
      - ./frontend/.env
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
      - PERPLEXITY_MCP_URL=http://shopai-perplexity:3500
    depends_on:
      - backend
      - perplexity
    networks:
      - app-network
    command: npm run dev

  perplexity:
    build:
      context: .
      dockerfile: perplexity.Dockerfile
    container_name: shopai-perplexity
    ports:
      - "3500:3500"
    environment:
      - PERPLEXITY_API_KEY=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
      - PERPLEXITY_MODEL=mistral-7b-instruct
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3500/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=shoppingdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
